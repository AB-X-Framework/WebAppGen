[
  {
    "layout": "horizontal",
    "components": [
      {
        "innerId": "LeftPanel",
        "component": "webappgen.js.LeftPanel",
        "size": "l2",
        "env": ""
      },
      {
        "innerId": "RightPanel",
        "component": "webappgen.js.RightPanel",
        "size": "l10",
        "env": ""
      }
    ],
    "name": "webappgen.js.JSBody",
    "isContainer": true,
    "js": [
      {
        "env": "",
        "value": "$(LeftPanel.JSPackage).change(()=>{\n    clearAutocomplete(LeftPanel.jsName);\n    \n    const packageName = $(LeftPanel.JSPackage).val();\n    if (packageName !== \"\"){\n        $.get(`/resources/packages/js/${packageName}`,(binariesPerPackage)=>{\n            binariesPerPackage.forEach((jsName)=>{\n                addAutocompleteValue(LeftPanel.jsName,jsName)\n            });\n            self.markSaved();\n            $(LeftPanel.jsName).val(\"\");\n            $(self.LeftPanel.ContentType).val(\"\").formSelect();\n            $(self.LeftPanel.Owner).val(\"\");\n            $(self.LeftPanel.RoleType).val(\"\").formSelect();\n        });\n    }\n});"
      },
      {
        "env": "",
        "value": "workingEnv.currPage = 0;\nworkingEnv.JSBody = self;\nlet editor = ace.edit(self.RightPanel.FileContent);\n\neditor.session.on('change', function(delta) {\n    workingEnv.updatedJS.content = editor.getValue();\n    self.markChanged();\n});\n\nworkingEnv.renderJS = ()=> {\n    workingEnv.jsName = $(LeftPanel.jsName).val();\n    if (workingEnv.jsName !== \"\"){\n        $.get(`/resources/binaries/${workingEnv.jsName}`,(js)=>{\n            workingEnv.updatedJS = js;\n            $.get(`/resources/binary/${workingEnv.jsName}`,(jsResult)=>{\n                editor.setValue(jsResult);\n                self.markSaved();\n                workingEnv.updatedJS.content = jsResult;\n            },\"text\");\n            $(self.LeftPanel.Owner).val(js.owner);\n            if (js.contentType === \"text/css\"){\n                editor.session.setMode(\"ace/mode/css\");\n            }\n            $(self.LeftPanel.ContentType).val(js.contentType).formSelect();\n            $(self.LeftPanel.RoleType).val(js.role).formSelect();\n        });\n    }\n}\n$(LeftPanel.jsName).change(workingEnv.renderJS);"
      },
      {
        "env": "",
        "value": "self.markChanged=()=>{\n    self.LeftPanel.MenuPanel.SaveJS.markChanged();\n}\n\nself.markSaved=()=>{\n    self.LeftPanel.MenuPanel.SaveJS.markSaved();\n}\n\n$(self.LeftPanel.Owner).on('input',()=>{\n    workingEnv.updatedJS.owner = $(self.RightPanel.DetailsPanel.Owner).val(); \n    self.markChanged();\n});\n \n$(self.LeftPanel.ContentType).change(()=>{\n    workingEnv.updatedJS.contentType = $(self.RightPanel.DetailsPanel.ContentType).val(); \n    self.markChanged();\n});\n \n$(self.LeftPanel.RoleType).change(()=>{\n    workingEnv.updatedJS.role = $(self.RightPanel.DetailsPanel.RoleType).val(); \n    self.markChanged();\n});"
      }
    ]
  },
  {
    "layout": "container",
    "components": [
      {
        "innerId": "SaveJS",
        "component": "webappgen.js.SaveJS",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "NewJS",
        "component": "webappgen.js.NewJS",
        "size": "",
        "env": ""
      },
      {
        "innerId": "CloneJS",
        "component": "webappgen.js.CloneJS",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "DeleteJS",
        "component": "webappgen.js.DeleteJS",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "ConfirmDeleteJS",
        "component": "webappgen.js.ConfirmDeleteJS",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "DeletePopup",
        "component": "webappgen.js.DeletePopup",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "SaveJSConfirm",
        "component": "webappgen.js.SaveJSConfirm",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "NewJSModal",
        "component": "webappgen.js.NewJSModal",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "CloneJSModal",
        "component": "webappgen.js.CloneJSModal",
        "size": "l12",
        "env": ""
      }
    ],
    "name": "webappgen.js.MenuPanel",
    "isContainer": true,
    "js": [
      {
        "env": "",
        "value": "$(SaveJS).click(()=>{\n    PageContent.openModal(SaveJSConfirm);\n});"
      },
      {
        "env": "",
        "value": "$(NewJS).click(()=>{\n    PageContent.openModal(NewJSModal);\n});"
      },
      {
        "env": "",
        "value": "$(CloneJS).click(()=>{\n    PageContent.openModal(CloneJSModal);\n});"
      },
      {
        "env": "",
        "value": "$(DeleteJS).click(()=>{\n    PageContent.openModal(ConfirmDeleteJS);\n})"
      }
    ]
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "New File"}
    }],
    "name": "webappgen.js.ProcessAddJS",
    "isContainer": false,
    "js": [],
    "type": "button"
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "Save File"}
    }],
    "name": "webappgen.js.SaveJS",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "workingEnv.SaveJS=self;\nself.markChanged=()=>{\n    $(self).addClass(PageContent.global.themeUpdated);\n}\n\nself.markSaved=()=>{\n    $(self).removeClass(PageContent.global.themeUpdated);\n}"
    }],
    "type": "button"
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "Clone File"}
    }],
    "name": "webappgen.js.CloneJS",
    "isContainer": false,
    "js": [],
    "type": "button"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "label": "Cloned js name",
        "title": "Cloned js name",
        "content": ""
      }
    }],
    "name": "webappgen.js.ClonedJSName",
    "isContainer": false,
    "js": [],
    "type": "textfield"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "label": "New js name",
        "title": "JS name",
        "content": ""
      }
    }],
    "name": "webappgen.js.NewJSName",
    "isContainer": false,
    "js": [],
    "type": "textfield"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "src": "",
        "values": [],
        "title": "JS Name"
      }
    }],
    "name": "webappgen.js.jsName",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "workingEnv.jsName = self;"
    }],
    "type": "autocomplete"
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "Delete File"}
    }],
    "name": "webappgen.js.DeleteJS",
    "isContainer": false,
    "js": [],
    "type": "button"
  },
  {
    "layout": "popup",
    "components": [
      {
        "innerId": "NewJSName",
        "component": "webappgen.js.NewJSName",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "NewJSConfirm",
        "component": "webappgen.js.NewJSConfirm",
        "size": "l12",
        "env": ""
      }
    ],
    "name": "webappgen.js.NewJSModal",
    "isContainer": true,
    "js": [{
      "env": "",
      "value": "$(NewJSConfirm).click(()=>{\n    const name = $(NewJSName).val();\n    const contentType = \"text/javascript\";\n    const roleType = \"user\";\n    $.post(`/resources/js`,{\n            \"name\":name,\n            \"role\":roleType,\n            \"contentType\":contentType,\n            \"content\":\"\"\n        } ,(status)=>{\n            PageContent.closeModal(self);\n            if (status.success){\n               addAutocompleteValue(workingEnv.PackageName,status.package)\n               addAutocompleteValue(workingEnv.jsName,name);\n               $(workingEnv.ContentType).val(contentType);\n               $(workingEnv.RoleType).val(roleType);\n               workingEnv.renderJS();\n            } else {\n                PageContent.showModal(\"Cannot create js\"+JSON.stringify(status.error))\n            }\n            \n        }\n    ); \n    \n});"
    }]
  },
  {
    "layout": "vertical",
    "components": [{
      "innerId": "FileContent",
      "component": "webappgen.js.ImgContainer",
      "size": "l6",
      "env": ""
    }],
    "name": "webappgen.js.RightPanel",
    "isContainer": true,
    "js": []
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "Create New JS"}
    }],
    "name": "webappgen.js.NewJSConfirm",
    "isContainer": false,
    "js": [],
    "type": "button"
  },
  {
    "layout": "vertical",
    "components": [
      {
        "innerId": "header",
        "component": "webappgen.home.header",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "modelContainer",
        "component": "webappgen.js.JSBody",
        "size": "",
        "env": ""
      }
    ],
    "name": "webappgen.js.MainJSComponent",
    "isContainer": true,
    "js": []
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "cancel": "Cancel",
        "ok": "Delete",
        "title": "Confirm Delete",
        "content": "Are you sure to delete this js?"
      }
    }],
    "name": "webappgen.js.ConfirmDeleteJS",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "$(self.ok).click(()=>{\n    $.ajax({\n        url: `/resources/js/${workingEnv.jsName}`, // the resource to delete\n        type: 'DELETE',\n        success: (result)=> {\n            if (result.success){\n                location.reload();    \n            }else {\n                PageContent.showModal(\"Cannot delete js \"+JSON.stringify(result.error));\n            }\n            \n        }\n});\n});"
    }],
    "type": "okCancelModal"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "cancel": "Cancel",
        "ok": "Save",
        "title": "Save JS Values",
        "content": "Are you sure you want to save js values?"
      }
    }],
    "name": "webappgen.js.SaveJSConfirm",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "$(self.ok).click(()=>{\n    const values = Object.entries(workingEnv.updatedJS).map(([key, value]) => ({ key, value }));\n   $.post(`/resources/js`,workingEnv.updatedJS\n    ,(status)=>{\n        if (status.success){\n            PageContent.closeModal(self);\n            workingEnv.renderJS();\n            workingEnv.SaveJS.markSaved();\n        }else {\n            PageContent.showModal(\"Cannot save values \"+JSON.stringify(status.error));\n        }\n    }); \n});"
    }],
    "type": "okCancelModal"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "cancel": "Cancel",
        "ok": "Ok",
        "title": "Delete JS Entry",
        "content": "Do you want to delete this entry?"
      }
    }],
    "name": "webappgen.js.DeletePopup",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "workingEnv.DeletePopup = self;\n\n$(self.ok).click(()=>{\n    const responseFx = (status)=>{\n            if (status.success){\n                PageContent.closeModal(workingEnv.DeletePopup);\n                workingEnv.renderJS();\n            } else {\n                PageContent.showModal(`Cannot delete ${self.key}. ${JSON.stringify(status.error)}`)\n            }\n        };\n    \n    $.ajax({\n        \"type\": 'DELETE',\n        \"url\":`/resources/binary/${workingEnv.jsName}/entries/${self.key}`,\n        \"success\":responseFx\n    });\n});\n\nself.setKey=(key)=>{\n    self.key = key;\n}"
    }],
    "type": "okCancelModal"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "src": "/resources/packages/binaries",
        "values": [],
        "title": "JS Package"
      }
    }],
    "name": "webappgen.js.JSPackage",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "workingEnv.PackageName=self;"
    }],
    "type": "autocomplete"
  },
  {
    "specs": [{
      "env": "",
      "value": {"title": "New File"}
    }],
    "name": "webappgen.js.NewJS",
    "isContainer": false,
    "js": [],
    "type": "button"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "label": "JS owner",
        "title": "Owner",
        "content": ""
      }
    }],
    "name": "webappgen.js.Owner",
    "isContainer": false,
    "js": [],
    "type": "textfield"
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "src": "",
        "values": [
          {
            "text": "text/javascript",
            "value": "text/javascript"
          },
          {
            "text": "text/css",
            "value": "text/css"
          }
        ],
        "title": "Content Type"
      }
    }],
    "name": "webappgen.js.ContentType",
    "isContainer": false,
    "js": [{
      "env": "",
      "value": "workingEnv.ContentType = self;"
    }],
    "type": "select"
  },
  {
    "layout": "vertical",
    "components": [
      {
        "innerId": "JSPackage",
        "component": "webappgen.js.JSPackage",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "jsName",
        "component": "webappgen.js.jsName",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "ContentType",
        "component": "webappgen.js.ContentType",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "Owner",
        "component": "webappgen.js.Owner",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "RoleType",
        "component": "webappgen.components.ResourceType",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "MenuPanel",
        "component": "webappgen.js.MenuPanel",
        "size": "l12",
        "env": ""
      }
    ],
    "name": "webappgen.js.LeftPanel",
    "isContainer": true,
    "js": [{
      "env": "",
      "value": "workingEnv.RoleType = self.RoleType;"
    }]
  },
  {
    "specs": [{
      "env": "",
      "value": {
        "content": "//Your JS Here",
        "height": "800px"
      }
    }],
    "name": "webappgen.js.ImgContainer",
    "isContainer": false,
    "js": [],
    "type": "jsEditor"
  },
  {
    "layout": "popup",
    "components": [
      {
        "innerId": "JSjsName",
        "component": "webappgen.js.ClonedJSName",
        "size": "l12",
        "env": ""
      },
      {
        "innerId": "NewJSConfirm",
        "component": "webappgen.js.NewJSConfirm",
        "size": "l12",
        "env": ""
      }
    ],
    "name": "webappgen.js.CloneJSModal",
    "isContainer": true,
    "js": [{
      "env": "",
      "value": "$(NewJSConfirm).click(()=>{\n    const newName = $(JSjsName).val();\n    $.post(`/resources/binaries/clone`,{\n        \"newName\":newName,\n        \"original\":workingEnv.jsName,\n        \"contentType\":workingEnv.updatedJS.contentType,\n        \"owner\":workingEnv.updatedJS.owner,\n        \"role\":workingEnv.updatedJS.role\n    },(status)=>{\n       if (status.success){\n           PageContent.closeModal(self);\n           addAutocompleteValue(workingEnv.PackageName,status.package)\n           addAutocompleteValue(workingEnv.jsName,newName);\n           workingEnv.renderJS();\n       } else {\n           PageContent.showModal(\"Cannot create js\"+JSON.stringify(status.error))\n       }\n    });\n});"
    }]
  }
]